// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "strings"

func Library(props LibraryProps) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<section class=\"space-y-8\"><div class=\"flex flex-wrap items-start justify-between gap-6\"><div class=\"space-y-4\"><h1 class=\"text-4xl font-bold\">Your library</h1><p class=\"max-w-2xl text-base-content/70 text-lg\">Craft rehearsal-ready collections, group songs by moment, and keep everything in sync with your team.</p></div></div><div class=\"rounded-box border border-base-300 bg-base-100 shadow-sm\"><div class=\"space-y-6 p-6\" id=\"library-surface\"><div id=\"library-empty-state\" class=\"flex flex-col items-center gap-4 rounded-box border border-dashed border-base-300 bg-base-100/70 p-12 text-center\"><div class=\"space-y-2\"><h2 class=\"text-2xl font-semibold\">No libraries yet</h2><p class=\"max-w-md text-base-content/70\">Create a custom library to organize songs for your next performance or study session.</p></div><button type=\"button\" class=\"btn btn-primary\" id=\"library-empty-create\" onclick=\"library_modal.showModal()\">Create a library</button></div><div id=\"library-list\" class=\"hidden space-y-5\"><div class=\"flex flex-wrap items-center justify-between gap-4\"><div><h2 class=\"text-2xl font-semibold\">Saved libraries</h2><p class=\"text-sm text-base-content/60\">Track sets, devotionals, or chord studies in one place.</p></div><span id=\"library-count\" class=\"text-sm text-base-content/60\"></span></div><div id=\"library-items\" class=\"space-y-4\"></div></div></div></div></section><dialog id=\"library_modal\" class=\"modal\"><div class=\"modal-box w-full max-w-3xl space-y-6\"><form method=\"dialog\" class=\"absolute right-4 top-4\"><button class=\"btn btn-sm btn-circle btn-ghost\" type=\"submit\" aria-label=\"Close modal\">✕</button></form><div data-step=\"name\" class=\"space-y-6\"><div class=\"space-y-2\"><h2 class=\"text-2xl font-semibold\">New library</h2><p class=\"text-base-content/70\">Give your library a clear name so it is easy to find later.</p></div><div class=\"space-y-2\"><label class=\"form-control w-full\"><div class=\"label\"><span class=\"label-text\">Library name</span></div><input id=\"library-name\" type=\"text\" class=\"input input-bordered w-full\" placeholder=\"Sunday rehearsal\" autocomplete=\"off\" required></label><p id=\"library-name-error\" class=\"text-sm text-error hidden\">Library name is required</p></div><div class=\"flex justify-end gap-3\"><form method=\"dialog\"><button class=\"btn btn-ghost\">Close</button></form><button type=\"button\" id=\"library-continue\" class=\"btn btn-primary\">Continue</button></div></div><div data-step=\"songs\" class=\"hidden space-y-6\"><div class=\"space-y-2\"><h2 class=\"text-2xl font-semibold\">Select songs</h2><p class=\"text-base-content/70\">Choose the songs you want to include in “<span id=\"library-name-preview\" class=\"font-semibold text-base-content\"></span>”.</p></div><div class=\"rounded-box border border-base-300\"><div class=\"max-h-96 overflow-y-auto\" id=\"library-song-options\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, song := range props.Songs {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<label class=\"flex cursor-pointer items-center gap-4 border-b border-base-200 px-5 py-4 last:border-b-0\" data-song-id=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var3 string
				templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(song.ID)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/components/library.templ`, Line: 92, Col: 135}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\" data-song-artist=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var4 string
				templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(song.Artist)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/components/library.templ`, Line: 92, Col: 168}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\"><input type=\"checkbox\" class=\"checkbox checkbox-primary\" data-song-checkbox><div class=\"min-w-0 flex-1\"><span class=\"block font-semibold text-base-content\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var5 string
				templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(song.Title)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/components/library.templ`, Line: 95, Col: 74}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</span> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if strings.TrimSpace(song.Artist) != "" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<span class=\"mt-1 block text-sm text-base-content/60\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var6 string
					templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(song.Artist)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/components/library.templ`, Line: 97, Col: 78}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</div></label>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</div></div><div class=\"flex items-center justify-between\"><button type=\"button\" class=\"btn btn-ghost\" id=\"library-back\">Back</button> <span id=\"library-selected-count\" class=\"text-sm text-base-content/70\">0 selected</span></div><div class=\"flex justify-end gap-3\"><div class=\"modal-action\"></div><button type=\"button\" class=\"btn btn-primary\" id=\"library-save\" disabled>Save library</button></div></div></div></dialog>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Layout(PageMeta{
			Title:       "Lyric · Library",
			Description: "Create custom lyric libraries and organize the songs your team needs next.",
			Path:        "/library",
			Canonical:   defaultBaseURL + "/library", ActiveNav: "library",
			MainClass: "mx-auto flex w-full max-w-6xl flex-1 flex-col gap-12 px-6 py-12",
			OGImage:   "/static/opengraph/library.png",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate

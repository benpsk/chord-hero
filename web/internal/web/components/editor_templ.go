// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "fmt"

func EditorPage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"w-full max-w-4xl p-8 bg-white rounded-lg shadow-lg\"><h1 class=\"text-3xl font-bold mb-2\">Templ Text Editor</h1><p class=\"text-slate-600 mb-6\">A simple text area where the Tab key works for indentation.</p><form action=\"/save\" method=\"POST\"><textarea id=\"editor\" name=\"editor_content\" spellcheck=\"false\" class=\"w-full h-96 p-4 font-mono text-sm bg-slate-50 border border-slate-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition\"></textarea><div class=\"mt-4 text-right\"><button type=\"submit\" class=\"bg-blue-600 text-white font-semibold py-2 px-6 rounded-md hover:bg-blue-700 transition-colors\">Save Content</button></div></form></div><script>\n\t\t\t\tconst editor = document.getElementById('editor');\n\t\t\t\tif (editor) {\n\t\t\t\t\teditor.addEventListener('keydown', function(e) {\n\t\t\t\t\t\tif (e.key === 'Tab') {\n\t\t\t\t\t\t\te.preventDefault(); // Stop the browser from switching focus\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Insert a tab character at the cursor's position\n\t\t\t\t\t\t\tconst start = this.selectionStart;\n\t\t\t\t\t\t\tconst end = this.selectionEnd;\n\t\t\t\t\t\t\tthis.value = this.value.substring(0, start) + \"\\t\" + this.value.substring(end);\n\t\t\t\t\t\t\tthis.selectionStart = this.selectionEnd = start + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Layout(PageMeta{
			Title:       "titie",
			Description: fmt.Sprintf("View chords and lyrics for %s with overlay, inline, and lyric modes.", "ok"),
			Path:        fmt.Sprintf("/songs/%s", "1"),
			Canonical:   fmt.Sprintf("https://lyric.app/songs/%s", "1"),
			ActiveNav:   "songs",
			OGImage:     "/static/opengraph/songs.png",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate

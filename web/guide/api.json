## api format structure
-- api success response with message 
{
  "data": {
    "message": "Success"
  }
}

-- api success response with data []
{
  "data": [
    {
      "id": 1
    }
  ],
  "per_page": 10, -- only if pagination
  "total": 10 -- only if pagination
}

-- api failed response with message
{
  "errors": {
    "message": "failed request"
  }
}

-- api validation failed response 
{
  "errors": {
    "address": "Address is required."
    ...
  }
}


## api lists

-- GET /api/songs
  - lists all songs by alphabetically order
  - filter param => ?album_id=1, ?artist_id=1, ?writer_id=1, ?release_year=2000, ?search=hello [filter by name], ?playlist_id=1, ?is_trending=true and level_id
    - release year will check first album release_year then song release_year
{
  "data": [
    {
      "id": 1,
      "title": "Amazing Grace",
      "key": "G",
      "language": {
        "id": 1,
        "name": "Burmese"
      },
      "user_level_id": 1,
      "lyric": "Intro: [G]... \n Amazing...",
      "release_year": null,
      "level": {
        "id": 1,
        "name": "Easy"
      },
      "artists": [
        {"id": 1, "name": "John"}
      ],
      "writers": [
        {"id": 1, "name": "Doe"}
      ],
      "albums": [
        {"id": 1, "name": "Whatever", "release_year": 2000}
      ],
      "playlist_ids": [1,2,3],
      "created": {
        "id": 1,
        "email": "john@mail.com"
      },
    }
  ],
  "page": 1,
  "per_page": 10,
  "total": 30
}

-- POST /api/songs
{
  "title": "Amazing Grace",
  "level_id": 1,
  "key": "G",
  "language_id": 1,
  "lyric": "Intro: [G]\nAmazing grace, how sweet the sound",
  "release_year": 1779,
  "album_ids": [1, 2],
  "artist_ids": [1],
  "writer_ids": [4]
}

-- PUT /api/songs/{id}
{
  "title": "Amazing Grace",
  "level_id": 1,
  "key": "G",
  "language_id": 1,
  "lyric": "Intro: [G]\nAmazing grace, how sweet the sound",
  "release_year": 1779,
  "album_ids": [1, 2],
  "artist_ids": [1],
  "writer_ids": [4]
}

-- DELETE /api/songs/{id}

-- POST /api/songs/{id}/status/{created|pending}
  -- update song status => 

-- GET /api/albums
  -- ?search="album_name"
{
  "data": [
    {
      "id": 1,
      "name": "Whatever",
      "total": 12,
      "release_year": 2000
      "artists": [
        {
          "id": 1,
          "name": "J J"
        }
      ],
      "writers": [
        {
          "id": 1,
          "name" "Ah Nge"
        }
      ]
    }
  ],
  "page": 1,
  "per_page": 10,
  "total": 30
}

-- GET /api/artists
  -- ?search="album_name"
{
  "data": [
    {
      "id": 1,
      "name": "John Denver",
      "total": 60
    }
  ],
  "page": 1,
  "per_page": 10,
  "total": 30
}

-- GET /api/writers
  -- ?search="album_name"
{
  "data": [
    {
      "id": 1,
      "name": "Johnny",
      "total": 60
    }
  ],
  "page": 1,
  "per_page": 10,
  "total": 30
}

-- GET /api/release-year
  - filter based on albums release_year if null check song release_year
{
  "data": [
    {
      "id": 1,
      "name": 2000,
      "total": 60
    },
  ],
  "page": 1,
  "per_page": 10,
  "total": 30
}

-- GET /api/playlists
  -- ?search="name"
{
  "data": [
    {
      "id": 1,
      "name": "my uname playlist",
      "is_owner": true,
      "shared_with": [
        {
          "id": 1,
          "email": "john@mail.com"
        }
      ],
      "total": 3
    },
  ],
  "page": 1,
  "per_page": 10,
  "total": 30
}

-- POST /api/feedback
-- request
{
  "message": "hello there"
}

-- GET /api/chords/{c}
{
  "data": {
    "name": 'C',
    "positions": [
      {
        "id": 1,
        "base_fret": 10,
        "frets": [-1, -1, 10, 8, 8, 8],
        "fingers": [null, null, 4, 2, 1, 1],
      }
    ]
  },
}

-- GET /api/trending-songs
{
  "data": [
    {
      "id": 1,
      "name": "Top 10",
      "level": "Easy"
      "description": "Easy song for you!"
    }
  ]
}

-- GET /api/trending-albums
{
  "data": [
    {
      "id": 1,
      "name": "Album 1",
      "total": 12,
      "release_year": 2000,
      "artists": [
        {
          "id": 1,
          "name": "J J"
        }
      ],
      "writers": [
        {
          "id": 1,
          "name": "Ah Nge"
        }
      ]
    }
  ]
}

-- GET /api/trending-artists
{
  "data": [
    {
      "id": 1,
      "name": "J Cole",
    }
  ]
}

-- GET /api/levels
{
  "data": [
    {
      "id": 1,
      "name": "Easy",
    }
  ]
}

-- POST /api/songs/{song_id}/levels/{level_id}

-- POST /api/login
  -- request
{
  "username": "abc@mail.com"
}

-- POST /api/code
  -- request
{
  "code": 10292
}
  -- response 
{
  "data": {
    "access_token": "eyDdkda..."
  }
}

-- POST /api/me => auth protected
  -- response
{
  "username": "abc@mail.com",
  "role": "Contributor"
}

-- POST /api/playlists/{playlist_id}/songs
{
  "song_ids": [1,2,3],
  "action": "add" -- add or remove
}

-- GET /api/languages
{
  "data": [
    {
      "id": 1,
      "name": "Burmese",
    }
  ]
}

-- POST /api/playlists
{
  "name": "My Playlist 01"
}

-- DELETE /api/playlists/{id}

-- UPDATE /api/playlists/{id}
{
  "name": "Updated P01"
} 

-- POST /api/playlists/{id}/share
{
  "user_ids": [1,2,3]
}

-- POST /api/users?email=abc
  -- response
{
  "data": [
    {
      "id": 1,
      "email": "abc@mail.com"
    }
  ]
}

-- POST /api/playlists/{id}/leave

-- POST /api/songs/{song_id}/playlists
{
  "playlist_ids": [1,2,3]
}

-- DELETE /api/user

-- POST /api/songs/{song_id}/status/{created|deleted}


